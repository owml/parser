image: rust:latest

stages:
  - build
  - img-build
  - coverage

rust-latest:
  stage: build
  script:
    - cargo build --verbose
    - cargo test --verbose
  allow_failure: true

rust-nightly:
  stage: build
  image: rustlang/rust:nightly
  script:
    - cargo build --verbose
    - cargo test --verbose

img-build:
  stage: img-build
  image: rustlang/rust:nightly
  script:
    - cargo build --release
    - ls target/release
  only:
    - master
  artifacts:
    paths:
      - target/release/libowml_parser.rlib

coverage:
  stage: coverage
  before_script:
    - apt-get install -y libcurl4-openssl-dev
    - apt-get install -y libelf-dev
    - apt-get install -y libdw-dev
    - apt-get install -y cmake
    - apt-get install -y gcc
    - apt-get install -y binutils-dev
    - apt-get install -y libiberty-dev
  script: |
    wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
    tar xzf master.tar.gz &&
    cd kcov-master &&
    mkdir build &&
    cd build &&
    cmake .. &&
    make &&
    make install DESTDIR=../../kcov-build &&
    cd ../.. &&
    rm -rf kcov-master &&
    for file in target/debug/examplerust-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
    bash <(curl -s https://codecov.io/bash) &&
    echo "Uploaded code coverage"
